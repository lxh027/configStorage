// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: register.proto

package register

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RegisterRaftArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid        string `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	RaftID     string `protobuf:"bytes,2,opt,name=RaftID,proto3" json:"RaftID,omitempty"`
	Host       string `protobuf:"bytes,3,opt,name=Host,proto3" json:"Host,omitempty"`
	RaftPort   string `protobuf:"bytes,4,opt,name=RaftPort,proto3" json:"RaftPort,omitempty"`
	ClientPort string `protobuf:"bytes,5,opt,name=ClientPort,proto3" json:"ClientPort,omitempty"`
}

func (x *RegisterRaftArgs) Reset() {
	*x = RegisterRaftArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRaftArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRaftArgs) ProtoMessage() {}

func (x *RegisterRaftArgs) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRaftArgs.ProtoReflect.Descriptor instead.
func (*RegisterRaftArgs) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterRaftArgs) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *RegisterRaftArgs) GetRaftID() string {
	if x != nil {
		return x.RaftID
	}
	return ""
}

func (x *RegisterRaftArgs) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *RegisterRaftArgs) GetRaftPort() string {
	if x != nil {
		return x.RaftPort
	}
	return ""
}

func (x *RegisterRaftArgs) GetClientPort() string {
	if x != nil {
		return x.ClientPort
	}
	return ""
}

type RegisterRaftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK bool `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
}

func (x *RegisterRaftReply) Reset() {
	*x = RegisterRaftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterRaftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRaftReply) ProtoMessage() {}

func (x *RegisterRaftReply) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRaftReply.ProtoReflect.Descriptor instead.
func (*RegisterRaftReply) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterRaftReply) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

type GetRaftRegistrationsArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid     string `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	RaftID  string `protobuf:"bytes,2,opt,name=RaftID,proto3" json:"RaftID,omitempty"`
	Version string `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *GetRaftRegistrationsArgs) Reset() {
	*x = GetRaftRegistrationsArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRaftRegistrationsArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRaftRegistrationsArgs) ProtoMessage() {}

func (x *GetRaftRegistrationsArgs) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRaftRegistrationsArgs.ProtoReflect.Descriptor instead.
func (*GetRaftRegistrationsArgs) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{2}
}

func (x *GetRaftRegistrationsArgs) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *GetRaftRegistrationsArgs) GetRaftID() string {
	if x != nil {
		return x.RaftID
	}
	return ""
}

func (x *GetRaftRegistrationsArgs) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type GetRaftRegistrationsReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK     bool   `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Config []byte `protobuf:"bytes,2,opt,name=Config,proto3" json:"Config,omitempty"`
	Md5    string `protobuf:"bytes,3,opt,name=Md5,proto3" json:"Md5,omitempty"`
}

func (x *GetRaftRegistrationsReply) Reset() {
	*x = GetRaftRegistrationsReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRaftRegistrationsReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRaftRegistrationsReply) ProtoMessage() {}

func (x *GetRaftRegistrationsReply) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRaftRegistrationsReply.ProtoReflect.Descriptor instead.
func (*GetRaftRegistrationsReply) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{3}
}

func (x *GetRaftRegistrationsReply) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *GetRaftRegistrationsReply) GetConfig() []byte {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *GetRaftRegistrationsReply) GetMd5() string {
	if x != nil {
		return x.Md5
	}
	return ""
}

type UnregisterRaftArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uid    string `protobuf:"bytes,1,opt,name=Uid,proto3" json:"Uid,omitempty"`
	RaftID string `protobuf:"bytes,2,opt,name=RaftID,proto3" json:"RaftID,omitempty"`
	Idx    int64  `protobuf:"varint,3,opt,name=Idx,proto3" json:"Idx,omitempty"`
}

func (x *UnregisterRaftArgs) Reset() {
	*x = UnregisterRaftArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterRaftArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterRaftArgs) ProtoMessage() {}

func (x *UnregisterRaftArgs) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterRaftArgs.ProtoReflect.Descriptor instead.
func (*UnregisterRaftArgs) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{4}
}

func (x *UnregisterRaftArgs) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *UnregisterRaftArgs) GetRaftID() string {
	if x != nil {
		return x.RaftID
	}
	return ""
}

func (x *UnregisterRaftArgs) GetIdx() int64 {
	if x != nil {
		return x.Idx
	}
	return 0
}

type UnregisterRaftReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UnregisterRaftReply) Reset() {
	*x = UnregisterRaftReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnregisterRaftReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterRaftReply) ProtoMessage() {}

func (x *UnregisterRaftReply) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterRaftReply.ProtoReflect.Descriptor instead.
func (*UnregisterRaftReply) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{5}
}

type NewNamespaceArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	PrivateKey string `protobuf:"bytes,2,opt,name=PrivateKey,proto3" json:"PrivateKey,omitempty"`
	RaftId     string `protobuf:"bytes,3,opt,name=raftId,proto3" json:"raftId,omitempty"`
}

func (x *NewNamespaceArgs) Reset() {
	*x = NewNamespaceArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewNamespaceArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewNamespaceArgs) ProtoMessage() {}

func (x *NewNamespaceArgs) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewNamespaceArgs.ProtoReflect.Descriptor instead.
func (*NewNamespaceArgs) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{6}
}

func (x *NewNamespaceArgs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *NewNamespaceArgs) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *NewNamespaceArgs) GetRaftId() string {
	if x != nil {
		return x.RaftId
	}
	return ""
}

type NewNamespaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK  bool   `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
}

func (x *NewNamespaceReply) Reset() {
	*x = NewNamespaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewNamespaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewNamespaceReply) ProtoMessage() {}

func (x *NewNamespaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewNamespaceReply.ProtoReflect.Descriptor instead.
func (*NewNamespaceReply) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{7}
}

func (x *NewNamespaceReply) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *NewNamespaceReply) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetClusterArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetClusterArgs) Reset() {
	*x = GetClusterArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterArgs) ProtoMessage() {}

func (x *GetClusterArgs) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterArgs.ProtoReflect.Descriptor instead.
func (*GetClusterArgs) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{8}
}

type GetClusterReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Clusters []*GetClusterReply_Cluster `protobuf:"bytes,1,rep,name=Clusters,proto3" json:"Clusters,omitempty"`
}

func (x *GetClusterReply) Reset() {
	*x = GetClusterReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterReply) ProtoMessage() {}

func (x *GetClusterReply) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterReply.ProtoReflect.Descriptor instead.
func (*GetClusterReply) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{9}
}

func (x *GetClusterReply) GetClusters() []*GetClusterReply_Cluster {
	if x != nil {
		return x.Clusters
	}
	return nil
}

type CommitArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string      `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	PrivateKey string      `protobuf:"bytes,2,opt,name=PrivateKey,proto3" json:"PrivateKey,omitempty"`
	Ops        []*ConfigOp `protobuf:"bytes,3,rep,name=Ops,proto3" json:"Ops,omitempty"`
}

func (x *CommitArgs) Reset() {
	*x = CommitArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitArgs) ProtoMessage() {}

func (x *CommitArgs) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitArgs.ProtoReflect.Descriptor instead.
func (*CommitArgs) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{10}
}

func (x *CommitArgs) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CommitArgs) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *CommitArgs) GetOps() []*ConfigOp {
	if x != nil {
		return x.Ops
	}
	return nil
}

type CommitReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK           bool  `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	LastCommitID int64 `protobuf:"varint,2,opt,name=LastCommitID,proto3" json:"LastCommitID,omitempty"`
}

func (x *CommitReply) Reset() {
	*x = CommitReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommitReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommitReply) ProtoMessage() {}

func (x *CommitReply) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommitReply.ProtoReflect.Descriptor instead.
func (*CommitReply) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{11}
}

func (x *CommitReply) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *CommitReply) GetLastCommitID() int64 {
	if x != nil {
		return x.LastCommitID
	}
	return 0
}

type ConfigOp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int64  `protobuf:"varint,1,opt,name=Id,proto3" json:"Id,omitempty"`
	Type  int64  `protobuf:"varint,2,opt,name=Type,proto3" json:"Type,omitempty"`
	Key   string `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`
	Value string `protobuf:"bytes,4,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *ConfigOp) Reset() {
	*x = ConfigOp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConfigOp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigOp) ProtoMessage() {}

func (x *ConfigOp) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigOp.ProtoReflect.Descriptor instead.
func (*ConfigOp) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{12}
}

func (x *ConfigOp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ConfigOp) GetType() int64 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *ConfigOp) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ConfigOp) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetConfigArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	PrivateKey string `protobuf:"bytes,2,opt,name=PrivateKey,proto3" json:"PrivateKey,omitempty"`
	Key        string `protobuf:"bytes,3,opt,name=Key,proto3" json:"Key,omitempty"`
}

func (x *GetConfigArgs) Reset() {
	*x = GetConfigArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigArgs) ProtoMessage() {}

func (x *GetConfigArgs) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigArgs.ProtoReflect.Descriptor instead.
func (*GetConfigArgs) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{13}
}

func (x *GetConfigArgs) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetConfigArgs) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *GetConfigArgs) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetConfigReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK    bool   `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=Value,proto3" json:"Value,omitempty"`
}

func (x *GetConfigReply) Reset() {
	*x = GetConfigReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigReply) ProtoMessage() {}

func (x *GetConfigReply) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigReply.ProtoReflect.Descriptor instead.
func (*GetConfigReply) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{14}
}

func (x *GetConfigReply) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *GetConfigReply) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GetConfigsByNamespaceArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	PrivateKey string `protobuf:"bytes,2,opt,name=PrivateKey,proto3" json:"PrivateKey,omitempty"`
}

func (x *GetConfigsByNamespaceArgs) Reset() {
	*x = GetConfigsByNamespaceArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigsByNamespaceArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigsByNamespaceArgs) ProtoMessage() {}

func (x *GetConfigsByNamespaceArgs) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigsByNamespaceArgs.ProtoReflect.Descriptor instead.
func (*GetConfigsByNamespaceArgs) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{15}
}

func (x *GetConfigsByNamespaceArgs) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *GetConfigsByNamespaceArgs) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type GetConfigsByNamespaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OK      bool              `protobuf:"varint,1,opt,name=OK,proto3" json:"OK,omitempty"`
	Configs map[string]string `protobuf:"bytes,2,rep,name=Configs,proto3" json:"Configs,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GetConfigsByNamespaceReply) Reset() {
	*x = GetConfigsByNamespaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetConfigsByNamespaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConfigsByNamespaceReply) ProtoMessage() {}

func (x *GetConfigsByNamespaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConfigsByNamespaceReply.ProtoReflect.Descriptor instead.
func (*GetConfigsByNamespaceReply) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{16}
}

func (x *GetConfigsByNamespaceReply) GetOK() bool {
	if x != nil {
		return x.OK
	}
	return false
}

func (x *GetConfigsByNamespaceReply) GetConfigs() map[string]string {
	if x != nil {
		return x.Configs
	}
	return nil
}

type DeleteNamespaceArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	PrivateKey string `protobuf:"bytes,2,opt,name=PrivateKey,proto3" json:"PrivateKey,omitempty"`
}

func (x *DeleteNamespaceArgs) Reset() {
	*x = DeleteNamespaceArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNamespaceArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceArgs) ProtoMessage() {}

func (x *DeleteNamespaceArgs) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceArgs.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceArgs) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{17}
}

func (x *DeleteNamespaceArgs) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *DeleteNamespaceArgs) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type DeleteNamespaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteNamespaceReply) Reset() {
	*x = DeleteNamespaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteNamespaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteNamespaceReply) ProtoMessage() {}

func (x *DeleteNamespaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteNamespaceReply.ProtoReflect.Descriptor instead.
func (*DeleteNamespaceReply) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{18}
}

type TransNamespaceArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace  string `protobuf:"bytes,1,opt,name=Namespace,proto3" json:"Namespace,omitempty"`
	RaftID     string `protobuf:"bytes,2,opt,name=RaftID,proto3" json:"RaftID,omitempty"`
	PrivateKey string `protobuf:"bytes,3,opt,name=PrivateKey,proto3" json:"PrivateKey,omitempty"`
}

func (x *TransNamespaceArgs) Reset() {
	*x = TransNamespaceArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransNamespaceArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransNamespaceArgs) ProtoMessage() {}

func (x *TransNamespaceArgs) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransNamespaceArgs.ProtoReflect.Descriptor instead.
func (*TransNamespaceArgs) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{19}
}

func (x *TransNamespaceArgs) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *TransNamespaceArgs) GetRaftID() string {
	if x != nil {
		return x.RaftID
	}
	return ""
}

func (x *TransNamespaceArgs) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type TransNamespaceReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransNamespaceReply) Reset() {
	*x = TransNamespaceReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransNamespaceReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransNamespaceReply) ProtoMessage() {}

func (x *TransNamespaceReply) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransNamespaceReply.ProtoReflect.Descriptor instead.
func (*TransNamespaceReply) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{20}
}

type GetClusterReply_Cluster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RaftID  string `protobuf:"bytes,1,opt,name=RaftID,proto3" json:"RaftID,omitempty"`
	Address string `protobuf:"bytes,2,opt,name=Address,proto3" json:"Address,omitempty"`
}

func (x *GetClusterReply_Cluster) Reset() {
	*x = GetClusterReply_Cluster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_register_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClusterReply_Cluster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterReply_Cluster) ProtoMessage() {}

func (x *GetClusterReply_Cluster) ProtoReflect() protoreflect.Message {
	mi := &file_register_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterReply_Cluster.ProtoReflect.Descriptor instead.
func (*GetClusterReply_Cluster) Descriptor() ([]byte, []int) {
	return file_register_proto_rawDescGZIP(), []int{9, 0}
}

func (x *GetClusterReply_Cluster) GetRaftID() string {
	if x != nil {
		return x.RaftID
	}
	return ""
}

func (x *GetClusterReply_Cluster) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

var File_register_proto protoreflect.FileDescriptor

var file_register_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x8c, 0x01, 0x0a, 0x10, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x61, 0x66,
	0x74, 0x41, 0x72, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x66, 0x74, 0x49,
	0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x61, 0x66, 0x74, 0x49, 0x44, 0x12,
	0x12, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x48,
	0x6f, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x52, 0x61, 0x66, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x52, 0x61, 0x66, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x12,
	0x1e, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x50, 0x6f, 0x72, 0x74, 0x22,
	0x23, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x61, 0x66, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x02, 0x4f, 0x4b, 0x22, 0x5e, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x52, 0x61, 0x66, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x41, 0x72, 0x67, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x66, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x52, 0x61, 0x66, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x55, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x52, 0x61, 0x66, 0x74, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f,
	0x4b, 0x12, 0x16, 0x0a, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x06, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x64, 0x35,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x64, 0x35, 0x22, 0x50, 0x0a, 0x12, 0x55,
	0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x61, 0x66, 0x74, 0x41, 0x72, 0x67,
	0x73, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x55, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x66, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x61, 0x66, 0x74, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x49,
	0x64, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x49, 0x64, 0x78, 0x22, 0x15, 0x0a,
	0x13, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x61, 0x66, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x5e, 0x0a, 0x10, 0x4e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x61, 0x66, 0x74, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x61,
	0x66, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x11, 0x4e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x4f, 0x4b, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x10, 0x0a, 0x03, 0x4d, 0x73, 0x67,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4d, 0x73, 0x67, 0x22, 0x10, 0x0a, 0x0e, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x22, 0x84, 0x01,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x12, 0x34, 0x0a, 0x08, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x08, 0x43,
	0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x1a, 0x3b, 0x0a, 0x07, 0x43, 0x6c, 0x75, 0x73, 0x74,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x52, 0x61, 0x66, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x52, 0x61, 0x66, 0x74, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x22, 0x67, 0x0a, 0x0a, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x72,
	0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x12, 0x1b, 0x0a, 0x03, 0x4f, 0x70, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x70, 0x52, 0x03, 0x4f, 0x70, 0x73, 0x22, 0x41, 0x0a,
	0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02,
	0x4f, 0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x22, 0x0a, 0x0c,
	0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0c, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x49, 0x44,
	0x22, 0x56, 0x0a, 0x08, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x4f, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x5f, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x22, 0x36, 0x0a, 0x0e, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x4f,
	0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x14, 0x0a, 0x05, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x59, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a,
	0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x22, 0xac, 0x01, 0x0a,
	0x1a, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x4f,
	0x4b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x4f, 0x4b, 0x12, 0x42, 0x0a, 0x07, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x1a,
	0x3a, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x13, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72,
	0x67, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79,
	0x22, 0x16, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x6a, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x52, 0x61, 0x66, 0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x52, 0x61,
	0x66, 0x74, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74,
	0x65, 0x4b, 0x65, 0x79, 0x22, 0x15, 0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32, 0xd1, 0x01, 0x0a, 0x0c,
	0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x61, 0x66, 0x74, 0x12, 0x35, 0x0a, 0x0c,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x61, 0x66, 0x74, 0x12, 0x11, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x61, 0x66, 0x74, 0x41, 0x72, 0x67, 0x73, 0x1a,
	0x12, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x61, 0x66, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x12, 0x4d, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x52, 0x61, 0x66, 0x74, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x19, 0x2e, 0x47, 0x65,
	0x74, 0x52, 0x61, 0x66, 0x74, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x61, 0x66, 0x74,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x0e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x52, 0x61, 0x66, 0x74, 0x12, 0x13, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x52, 0x61, 0x66, 0x74, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x14, 0x2e, 0x55, 0x6e, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x52, 0x61, 0x66, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x32,
	0x96, 0x03, 0x0a, 0x09, 0x6b, 0x76, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x12, 0x30, 0x0a,
	0x0b, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x73, 0x12, 0x0f, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x10, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x75, 0x73, 0x74, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12,
	0x35, 0x0a, 0x0c, 0x4e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x11, 0x2e, 0x4e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x12, 0x2e, 0x4e, 0x65, 0x77, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x23, 0x0a, 0x06, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x12, 0x0b, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x0c, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2c, 0x0a, 0x09, 0x47,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x0e, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x0f, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x50, 0x0a, 0x15, 0x47, 0x65, 0x74,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x12, 0x1a, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x42,
	0x79, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72, 0x67, 0x73, 0x1a, 0x1b,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x42, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3e, 0x0a, 0x0f, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x14,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x41, 0x72, 0x67, 0x73, 0x1a, 0x15, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4e, 0x61, 0x6d,
	0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x3b, 0x0a, 0x0e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x13, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x41, 0x72,
	0x67, 0x73, 0x1a, 0x14, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x42, 0x23, 0x5a, 0x21, 0x6c, 0x78, 0x68, 0x30,
	0x32, 0x37, 0x2f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x53, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_register_proto_rawDescOnce sync.Once
	file_register_proto_rawDescData = file_register_proto_rawDesc
)

func file_register_proto_rawDescGZIP() []byte {
	file_register_proto_rawDescOnce.Do(func() {
		file_register_proto_rawDescData = protoimpl.X.CompressGZIP(file_register_proto_rawDescData)
	})
	return file_register_proto_rawDescData
}

var file_register_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_register_proto_goTypes = []interface{}{
	(*RegisterRaftArgs)(nil),           // 0: RegisterRaftArgs
	(*RegisterRaftReply)(nil),          // 1: RegisterRaftReply
	(*GetRaftRegistrationsArgs)(nil),   // 2: GetRaftRegistrationsArgs
	(*GetRaftRegistrationsReply)(nil),  // 3: GetRaftRegistrationsReply
	(*UnregisterRaftArgs)(nil),         // 4: UnregisterRaftArgs
	(*UnregisterRaftReply)(nil),        // 5: UnregisterRaftReply
	(*NewNamespaceArgs)(nil),           // 6: NewNamespaceArgs
	(*NewNamespaceReply)(nil),          // 7: NewNamespaceReply
	(*GetClusterArgs)(nil),             // 8: GetClusterArgs
	(*GetClusterReply)(nil),            // 9: GetClusterReply
	(*CommitArgs)(nil),                 // 10: CommitArgs
	(*CommitReply)(nil),                // 11: CommitReply
	(*ConfigOp)(nil),                   // 12: ConfigOp
	(*GetConfigArgs)(nil),              // 13: GetConfigArgs
	(*GetConfigReply)(nil),             // 14: GetConfigReply
	(*GetConfigsByNamespaceArgs)(nil),  // 15: GetConfigsByNamespaceArgs
	(*GetConfigsByNamespaceReply)(nil), // 16: GetConfigsByNamespaceReply
	(*DeleteNamespaceArgs)(nil),        // 17: DeleteNamespaceArgs
	(*DeleteNamespaceReply)(nil),       // 18: DeleteNamespaceReply
	(*TransNamespaceArgs)(nil),         // 19: TransNamespaceArgs
	(*TransNamespaceReply)(nil),        // 20: TransNamespaceReply
	(*GetClusterReply_Cluster)(nil),    // 21: GetClusterReply.Cluster
	nil,                                // 22: GetConfigsByNamespaceReply.ConfigsEntry
}
var file_register_proto_depIdxs = []int32{
	21, // 0: GetClusterReply.Clusters:type_name -> GetClusterReply.Cluster
	12, // 1: CommitArgs.Ops:type_name -> ConfigOp
	22, // 2: GetConfigsByNamespaceReply.Configs:type_name -> GetConfigsByNamespaceReply.ConfigsEntry
	0,  // 3: registerRaft.RegisterRaft:input_type -> RegisterRaftArgs
	2,  // 4: registerRaft.GetRaftRegistrations:input_type -> GetRaftRegistrationsArgs
	4,  // 5: registerRaft.UnregisterRaft:input_type -> UnregisterRaftArgs
	8,  // 6: kvStorage.GetClusters:input_type -> GetClusterArgs
	6,  // 7: kvStorage.NewNamespace:input_type -> NewNamespaceArgs
	10, // 8: kvStorage.Commit:input_type -> CommitArgs
	13, // 9: kvStorage.GetConfig:input_type -> GetConfigArgs
	15, // 10: kvStorage.GetConfigsByNamespace:input_type -> GetConfigsByNamespaceArgs
	17, // 11: kvStorage.DeleteNamespace:input_type -> DeleteNamespaceArgs
	19, // 12: kvStorage.TransNamespace:input_type -> TransNamespaceArgs
	1,  // 13: registerRaft.RegisterRaft:output_type -> RegisterRaftReply
	3,  // 14: registerRaft.GetRaftRegistrations:output_type -> GetRaftRegistrationsReply
	5,  // 15: registerRaft.UnregisterRaft:output_type -> UnregisterRaftReply
	9,  // 16: kvStorage.GetClusters:output_type -> GetClusterReply
	7,  // 17: kvStorage.NewNamespace:output_type -> NewNamespaceReply
	11, // 18: kvStorage.Commit:output_type -> CommitReply
	14, // 19: kvStorage.GetConfig:output_type -> GetConfigReply
	16, // 20: kvStorage.GetConfigsByNamespace:output_type -> GetConfigsByNamespaceReply
	18, // 21: kvStorage.DeleteNamespace:output_type -> DeleteNamespaceReply
	20, // 22: kvStorage.TransNamespace:output_type -> TransNamespaceReply
	13, // [13:23] is the sub-list for method output_type
	3,  // [3:13] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_register_proto_init() }
func file_register_proto_init() {
	if File_register_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_register_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRaftArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterRaftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRaftRegistrationsArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRaftRegistrationsReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterRaftArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnregisterRaftReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewNamespaceArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewNamespaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommitReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConfigOp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigsByNamespaceArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetConfigsByNamespaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNamespaceArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteNamespaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransNamespaceArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransNamespaceReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_register_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClusterReply_Cluster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_register_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_register_proto_goTypes,
		DependencyIndexes: file_register_proto_depIdxs,
		MessageInfos:      file_register_proto_msgTypes,
	}.Build()
	File_register_proto = out.File
	file_register_proto_rawDesc = nil
	file_register_proto_goTypes = nil
	file_register_proto_depIdxs = nil
}
