syntax = "proto3";

option go_package = "lxh027/configStorage/api/register";

service registerRaft {
  // register a new raft service
  rpc RegisterRaft(RegisterRaftArgs) returns (RegisterRaftReply);

  // get raft config
  rpc GetRaftRegistrations(GetRaftRegistrationsArgs) returns (GetRaftRegistrationsReply);

  // unregister raft service
  rpc UnregisterRaft(UnregisterRaftArgs) returns (UnregisterRaftReply);
}

service kvStorage {
  rpc GetClusters(GetClusterArgs) returns (GetClusterReply);

  rpc NewNamespace(NewNamespaceArgs) returns (NewNamespaceReply);

  rpc Commit(CommitArgs) returns (CommitReply);

  rpc GetConfig(GetConfigArgs) returns (GetConfigReply);

  rpc GetConfigsByNamespace(GetConfigsByNamespaceArgs) returns (GetConfigsByNamespaceReply);
}


message RegisterRaftArgs {
  string Uid      = 1;
  string RaftID   = 2;
  string Host     = 3;
  string RaftPort = 4;
  string ClientPort = 5;
}

message RegisterRaftReply {
  bool  OK  = 1;
}

message GetRaftRegistrationsArgs {
  string Uid    = 1;
  string RaftID = 2;
  string version = 3;
}

message GetRaftRegistrationsReply {
  bool  OK      = 1;
  bytes Config  = 2;
  string Md5    = 3;
}

message UnregisterRaftArgs {
  string Uid    = 1;
  string RaftID = 2;
  int64  Idx    = 3;
}

message UnregisterRaftReply {

}

message NewNamespaceArgs {
  string Name = 1;
  string PrivateKey = 2;
  string raftId = 3;
}

message NewNamespaceReply {
  bool OK = 1;
  string Msg = 2;
}

message GetClusterArgs {}

message GetClusterReply {
  message Cluster {
    string RaftID = 1;
    string Address = 2;
  }
  repeated Cluster Clusters = 1;
}

message CommitArgs {
  string Namespace = 1;
  string PrivateKey = 2;
  repeated ConfigOp Ops = 3;
}

message CommitReply {
  bool OK = 1;
  int64 LastCommitID = 2;
}

message ConfigOp {
  int64 Id = 1;
  int64 Type = 2;
  string Key = 3;
  string Value = 4;
}

message GetConfigArgs {
  string Namespace = 1;
  string PrivateKey = 2;
  string Key = 3;
}

message GetConfigReply {
  bool OK = 1;
  string Value = 2;
}

message GetConfigsByNamespaceArgs {
  string Namespace = 1;
  string PrivateKey = 2;
}

message GetConfigsByNamespaceReply {
  bool OK = 1;
  map<string, string> Configs = 2;
}
